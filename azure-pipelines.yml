trigger:
  branches: 
    include: 
      - main

variables:
   - group: certificateCredential

stages:
############################################################
## Build Stage
############################################################

- stage: Build
  dependsOn: []
  jobs:

############################################################
## installs: npm dependencies 
############################################################
    - job: build_package 
      displayName: SPFx build and packaging
      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '16.13.0' # Specify the Node.js version to use
        - script: npm ci
          displayName: Install npm dependencies 
        
############################################################
## executes: gulp build and cleans
############################################################
        - task: gulp@0
          displayName: SPFx clean
          inputs:
            targets: clean
        - task: gulp@0
          displayName: SPFx build
          inputs:
            targets: build

############################################################
## executes: gulp bundle --ship 
############################################################
        - task: gulp@0
          displayName: SPFx bundle 
          inputs:
            targets: bundle
            arguments: --ship

############################################################
## executes: gulp package-solution --ship
############################################################
        - task: gulp@0
          displayName: SPFx package solution 
          inputs:
            targets: package-solution 
            arguments: --ship

############################################################
## evaluates: the name of the generated *.sppkg package
############################################################
        - script: |
            CMD_GET_SPPKG_NAME=$(find . -name '*.sppkg' -exec basename {} \;)
            echo "##vso[task.setvariable variable=SpPkgFilename;isOutput=true]${CMD_GET_SPPKG_NAME}"
          displayName: Get generated *.sppkg filename 
          name: GetSharePointPackage

############################################################
## copies: *.sppkg as a build artifact 
############################################################
        - task: CopyFiles@2
          inputs:
            sourceFolder: $(Build.Repository.LocalPath)/sharepoint/solution
            contents: '**/*.sppkg'
            targetFolder: $(Build.ArtifactStagingDirectory)  

############################################################
## publishes: *.sppkg as a build artifact 
###########################################################
        - task: PublishBuildArtifacts@1
          displayName: Publish SharePoint Package (*.sppkg)
          inputs:
            pathToPublish: $(Build.ArtifactStagingDirectory)
            artifactName: spfx-package
            publishLocation: 'Container'